{
  "_args": [
    [
      {
        "raw": "ngSmoothScroll",
        "scope": null,
        "escapedName": "ngSmoothScroll",
        "name": "ngSmoothScroll",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Azure/Desktop/Portfolio_webdev"
    ]
  ],
  "_from": "ngSmoothScroll@latest",
  "_id": "ngSmoothScroll@2.0.1",
  "_inCache": true,
  "_location": "/ngSmoothScroll",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/ngSmoothScroll-2.0.1.tgz_1484303661564_0.41494472743943334"
  },
  "_npmUser": {
    "name": "fabiotisci",
    "email": "fabiotisci@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ngSmoothScroll",
    "scope": null,
    "escapedName": "ngSmoothScroll",
    "name": "ngSmoothScroll",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/ngSmoothScroll/-/ngSmoothScroll-2.0.1.tgz",
  "_shasum": "c4909acd3320a78c5cda64c426df18f6bc00ac73",
  "_shrinkwrap": null,
  "_spec": "ngSmoothScroll",
  "_where": "/Users/Azure/Desktop/Portfolio_webdev",
  "bugs": {
    "url": "https://github.com/fabiotisci/ngSmoothScroll/issues"
  },
  "dependencies": {
    "angular": "^1.2.0"
  },
  "description": "A pure-javascript library and set of directives to scroll smoothly to an element with easing.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "c4909acd3320a78c5cda64c426df18f6bc00ac73",
    "tarball": "https://registry.npmjs.org/ngSmoothScroll/-/ngSmoothScroll-2.0.1.tgz"
  },
  "gitHead": "26682c57dac467d28d066a90f144f64ad5ba736c",
  "homepage": "https://github.com/fabiotisci/ngSmoothScroll#readme",
  "main": "lib/angular-smooth-scroll.js",
  "maintainers": [
    {
      "name": "fabiotisci",
      "email": "fabiotisci@gmail.com"
    }
  ],
  "name": "ngSmoothScroll",
  "optionalDependencies": {},
  "readme": "Angular smooth scroll\n==============\n\nThis is a npm version of ngSmoothScroll that's only available on bower. Visit this repo for more information: https://github.com/d-oliveros/ngSmoothScroll\n\nA pure-javascript library and set of directives to scroll smoothly to an element with easing. Easing support contributed by Willem Liu with code from Gaëtan Renaudeau.\n\nNo jQuery required.\n\n# Features\n\n  * Exposes a service that scrolls the window to an element's location\n  * Provides two directives that enable smooth scrolling to elements.\n  * Clean: No classes are added, no jQuery is required, no CSS files or configuration is needed.\n  * Scrolling within a custom container added in 2.0.0\n\n# Installation\n\nInclude the .js file in your page then enable usage of the directive by including the \"smoothScroll\" module\nas a dependency\n\n\n# npm\n\nInstall with npm with:\n\n```bash\nnpm install ngSmoothScroll\n```\n\n# Usage - As a directive\n\nThis module provides two directives:\n\n####smoothScroll:\n\nAttribute. Scrolls the window to this element, optionally validating the expression inside scroll-if.\n\nExample:\n```html\n\n// Basic - The window will scroll to this element's position when compiling this directive\n<div smooth-scroll></div>\n\n// With options\n<div smooth-scroll\n\tduration=\"800\"\n\teasing=\"easeInQuint\"\n\toffset=\"120\"\n\tcallback-before=\"aFunction(element)\"\n\tcallback-after=\"anotherFunction\">\n\t{{...}}\n</div>\n\n// Inside a custom container\n<div smooth-scroll\n\tduration=\"800\"\n\teasing=\"easeInQuint\"\n\toffset=\"120\"\n\tcallback-before=\"aFunction(element)\"\n\tcallback-after=\"anotherFunction\"\n\tcontainer-id=\"container-id\">\n\t{{...}}\n</div>\n\n// With condition\n<div smooth-scroll\n\tscroll-if=\"{{ myExpression }}\">\n\t{{...}}\n</div>\n\n// Inside ng-repeat\n<div smooth-scroll\n\tscroll-if=\"{{ $last }}\"\n\tduration=\"2500\">\n\t{{...}}\n</div>\n```\n\n####scrollTo:\n\nAttribute. Scrolls the window to the specified element ID when clicking this element.\n\nExample:\n```html\n\n// Basic\n<a href=\"#\"\n\tscroll-to=\"my-element-3\">\n\tClick me!\n</a>\n\n// Custom containers\n<a href=\"#\"\n\tscroll-to=\"my-element-3\"\n\tcontainer-id=\"custom-container-id\">\n\tClick me!\n</a>\n\n// onClick for non-anchor tags\n<div scroll-to=\"my-element-3\"\n\tcontainer-id=\"custom-container-id\">\n\tClick me!\n</div>\n\n// With options\n<button\n\tscroll-to=\"elem-id5\"\n\tduration=\"1800\"\n\tcallback-before=\"aFunction(element)\"\n\tcallback-after=\"anotherFunction\">\n\tScroll to next page.\n</button>\n```\n\n\n# Usage - As a service\n\nInject the 'smoothScroll' service in your directive / factory / controller / whatever, and call like this:\n\n```js\n\n// Using defaults\nvar element = document.getElementById('my-elem');\nsmoothScroll(element);\n\n// With options\nvar element = $elem[0];\n\nvar options = {\n\tduration: 700,\n\teasing: 'easeInQuad',\n\toffset: 120,\n\tcallbackBefore: function(element) {\n\t\tconsole.log('about to scroll to element', element);\n\t},\n\tcallbackAfter: function(element) {\n\t\tconsole.log('scrolled to element', element);\n\t}\n}\n\nsmoothScroll(element, options);\n\n// With options for custom container\nvar element = $elem[0];\n\nvar options = {\n\tduration: 700,\n\teasing: 'easeInQuad',\n\toffset: 120,\n\tcallbackBefore: function(element) {\n\t\tconsole.log('about to scroll to element', element);\n\t},\n\tcallbackAfter: function(element) {\n\t\tconsole.log('scrolled to element', element);\n\t},\n\tcontainerId: 'custom-container-id'\n}\n\nsmoothScroll(element, options);\n\n// In directive's link function\nlink: function($scope, $elem, $attrs){\n\tvar options = $attrs;\n\n\tsmoothScroll($elem[0], options);\n}\n\n\n```\n\n### Options\n\n#### duration\nType: `Integer`\nDefault: `800`\n\nThe duration of the smooth scroll, in miliseconds.\n\n#### offset\nType: `Integer`\nDefault: `0`\n\nThe offset from the top of the page in which the scroll should stop.\n\n#### easing\ntype: `string`\ndefault: `easeInOutQuart`\n\nthe easing function to be used for this scroll.\n\n#### callbackBefore\ntype: `function`\ndefault: `function(element) {}`\n\na callback function to run before the scroll has started. It is passed the\nelement that will be scrolled to.\n\n#### callbackAfter\ntype: `function`\ndefault: `function(element) {}`\n\na callback function to run after the scroll has completed. It is passed the\nelement that was scrolled to.\n\n#### containerId\ntype: `string`\ndefault: null\n\nID of the scrollable container which the element is a child of.\n\n### Easing functions\n\nThe available easing functions are:\n * 'easeInQuad'\n * 'easeOutQuad'\n * 'easeInOutQuad'\n * 'easeInCubic'\n * 'easeOutCubic'\n * 'easeInOutCubic'\n * 'easeInQuart'\n * 'easeOutQuart'\n * 'easeInOutQuart'\n * 'easeInQuint'\n * 'easeOutQuint'\n * 'easeInOutQuint'\n\n#### Credits\n\nCallback hooks contributed by Ben Armston.\nhttps://github.com/benarmston\n\nEasing support contributed by Willem Liu.\nhttps://github.com/willemliu\n\nEasing functions forked from Gaëtan Renaudeau.\nhttps://gist.github.com/gre/1650294\n\nInfinite loop bugs in iOS and Chrome (when zoomed) by Alex Guzman.\nhttps://github.com/alexguzman\n\nSupport for scrolling in custom containers by Joseph Matthias Goh.\nhttps://github.com/zephinzer\n\nInfluenced by Chris Ferdinandi\nhttps://github.com/cferdinandi\n\nFree to use under the MIT License.\n\nCheers.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fabiotisci/ngSmoothScroll.git"
  },
  "scripts": {},
  "version": "2.0.1"
}
